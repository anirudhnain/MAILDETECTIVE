/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.8
 * Generated at: 2014-06-23 06:01:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.grayscale;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.util.*;
import check.mailchecker;
import check.test2;
import check.test4other;
import check.test4starred;
import check.Laj;

public final class NewFile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

 public String[] id =new String[4];
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- The MIT License (MIT)\n");
      out.write("\n");
      out.write("Copyright (c) IIIT-DELHI \n");
      out.write("authors:\n");
      out.write("HEMANT JAIN \"hjcooljohny75@gmail.com\"\n");
      out.write("ANIRUDH NAIN \n");
      out.write("\n");
      out.write("\n");
      out.write("Permission is hereby granted, free of charge, to any person obtaining a copy\n");
      out.write("of this software and associated documentation files (the \"Software\"), to deal\n");
      out.write("in the Software without restriction, including without limitation the rights\n");
      out.write("to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n");
      out.write("copies of the Software, and to permit persons to whom the Software is\n");
      out.write("furnished to do so, subject to the following conditions:\n");
      out.write("\n");
      out.write("The above copyright notice and this permission notice shall be included in\n");
      out.write("all copies or substantial portions of the Software.\n");
      out.write("\n");
      out.write("THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n");
      out.write("IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n");
      out.write("FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n");
      out.write("AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n");
      out.write("LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n");
      out.write("OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n");
      out.write("THE SOFTWARE. -->\n");
      out.write("\n");
      out.write("    \n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
String name=request.getParameter("user");
String pass=request.getParameter("password");
System.out.println(name);
System.out.println(pass);	
mailchecker x =new mailchecker();
int j=0;
      out.write('\n');
      out.write('\n');
 String[] xyz=new String[2];
id[0]=name;
id[1]=pass;
xyz[0]=name;
xyz[1]=pass;
System.out.println("hiii");
int i=mailchecker.mai(xyz);
System.out.println("hiii");
//int i=mailchecker.fla;
System.out.println(i);
String site;
if(i==1)
{ site ="gmail_like.jsp?item="+j;

Thread thread = new Thread(){
    

public void run(){
	Laj demol = new Laj();
	id[2]="inbox";
	id[3]="read1.txt";
	
	try{
		
	Laj.mai(id);
} catch (Exception e) {
    e.printStackTrace();
  }   finally
  {}
System.out.println("Thread1 Running");


try{
	
	Laj demo = new Laj();
	id[2]="[Gmail]/Spam";
	id[3]="read2.txt";
	
Laj.mai(id);

} catch (Exception e) {
e.printStackTrace();
}   
System.out.println("Thread2 Running");

try{
	
	Laj demo = new Laj();
	id[2]="[Gmail]/Starred";
	id[3]="read.txt";
	
Laj.mai(id);

} catch (Exception e) {
e.printStackTrace();
}   
System.out.println("Thread3 Running");
try{
	
	Laj demo = new Laj();
	id[2]="[Gmail]/Drafts";
	id[3]="read3.txt";
	
Laj.mai(id);

} catch (Exception e) {
e.printStackTrace();
}   
System.out.println("Thread4 Running");

try{
	
	Laj demo = new Laj();
	id[2]="[Gmail]/Trash";
	id[3]="read4.txt";
	
Laj.mai(id);

} catch (Exception e) {
e.printStackTrace();
}   
System.out.println("Thread5 Running");
try{
	
	Laj demo = new Laj();
	id[2]="[Gmail]/Sent";
	id[3]="read5.txt";
	
Laj.mai(id);

} catch (Exception e) {
e.printStackTrace();
}   
System.out.println("Thread6 Running");

try{
	
	Laj demo = new Laj();
	id[2]="[Gmail]/All";
	id[3]="read6.txt";
	
Laj.mai(id);

} catch (Exception e) {
e.printStackTrace();
}   
System.out.println("Thread7 Running");



}  
//printLines(command + " stdout:", pro.getInputStream());
//printLines(command + " stderr:", pro.getErrorStream());
// pro.waitFor();
//System.out.println(command + " exitValue() " + pro.exitValue());
// runProcess("javac test2.java");
//runProcess("java test2 "+id+" "+pass+" "+choice+" &");

   };

thread.start();

    



	
}
else
	site = "index.jsp";
	

   // New location to be redirected
  
   response.setStatus(response.SC_MOVED_TEMPORARILY);
   response.setHeader("Location", site);
      out.write("\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
